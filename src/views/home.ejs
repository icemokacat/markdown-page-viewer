<!DOCTYPE html>
<html lang="ko">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Bruno API Docs</title>

    <link rel="stylesheet" href="/public/css/reset.css">
    <link rel="stylesheet" href="/public/css/github-markdown-min.css">
    <link rel="stylesheet" href="/public/css/markdown-page.css">

    <link rel="icon" href="/public/favicon.ico" type="image/x-icon">

    <style>

    </style>
</head>
<body>

    <main>
        <aside>
            <nav>
                <h2>
                    <p id="welcome">📺 API Collections</p>
                </h2>
                <ul class="index" id="collections">
                    <%- navHtml %>
                </ul>
            </nav>
        </aside>

        <article class="markdown-body" id="contents">
            <h1>Bruno API Docs</h1>

            <p>bruno 프로젝트의 .bru docs 를 markdown 으로 보는 페이지 입니다.</p>

            <h3>해당 프로젝트의 정보</h3>
            <ul>
                <li>Front Git Repo URL : <a href="https://github.com/icemokacat/markdown-page-viewer.git">https://github.com/icemokacat/markdown-page-viewer.git</a></li>
                <li>Front : NodeJS & Express(v4.19.2)</li>
                <li>Language : TypeScript & JavaScript</li>
                <li>Back : SpringBoot(v3.3.3)</li>
            </ul>
        </article>
    </main>

    <!-- UI Event -->
    <script>
        const collections = document.getElementById('collections');
        const links = collections.querySelectorAll('a');

        links.forEach(link => {
            link.addEventListener('click', () => {

                // sub menu가 있으면 active toggle
                if (link.nextElementSibling) {
                    links.forEach(link => {
                        link.classList.remove('active');
                    });
                    // 현재 a link 에 active 가 있으면 remove 없으면 add

                    // link.nextElementSibling 의 active 여부 확인
                    if(link.nextElementSibling.classList.contains('active')){
                        link.classList.remove('active');
                    } else {
                        link.classList.add('active');
                    }
                                    
                    link.nextElementSibling.classList.toggle('active');
                } // end of if (link.nextElementSibling)
            }); // end of addEventListener
        });

        // #welcome 클릭시 "/" 로 이동
        const welcome = document.getElementById('welcome');
        welcome.addEventListener('click', () => {
            location.href = '/';
        });
    </script>
</body>
</html>